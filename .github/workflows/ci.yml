name: CI/CD

on: [push]

jobs:
  check:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: Set envs
        # use latest tag as release version
        run: echo ::set-env name=RELEASE_VERSION::${GITHUB_SHA}

      - name: Setup JDK
        uses: actions/setup-java@v1
        with:
          java-version: 11.0.3

      - name: Execute test with gradle
        run: ./gradlew test

      # Send webhook to Wire using Slack Bot
      - name: Webhook to Wire
        uses: 8398a7/action-slack@v2
        with:
          status: ${{ job.status }}
          author_name: Ganymede CI pipeline
        env:
          SLACK_WEBHOOK_URL: ${{ secrets.WEBHOOK_CI }}
        # Send message only if previous step failed
        if: failure()

  on_prem_build:
    runs-on: ubuntu-latest
    needs: check
    steps:
      - uses: actions/checkout@v2

      - name: Set envs
        # use latest tag as release version
        run: echo ::set-env name=RELEASE_VERSION::${GITHUB_SHA}

      # JDK setup
      - name: Setup JDK
        uses: actions/setup-java@v1
        with:
          java-version: 11.0.3

      # Builds application and creates final archive
      - name: Create release with package.sh
        env:
          CERTIFICATE: ${{ secrets.SWISSCOM_CERTIFICATE }}
          VERSION: ${{ env.RELEASE_VERSION }}
        run: |
          (cd deployment && ./package.sh -v "$VERSION" -c "$CERTIFICATE")

      # Store generated artifact
      - name: Upload artifact
        uses: actions/upload-artifact@v1
        with:
          name: ganymede.tar.gz
          path: deployment/ganymede.tar.gz

      # Send webhook to Wire using Slack Bot
      - name: Webhook to Wire
        uses: 8398a7/action-slack@v2
        with:
          status: ${{ job.status }}
          author_name: Ganymede CI pipeline
        env:
          SLACK_WEBHOOK_URL: ${{ secrets.WEBHOOK_CI }}
        # Send message only if previous step failed
        if: failure()


  publish:
    runs-on: ubuntu-latest
    needs: check
    steps:
      - uses: actions/checkout@v2

      - name: Build docker image, push if the branch is master
        uses: docker/build-push-action@v1
        with:
          # login to repo
          repository: lukaswire/ganymede
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}
          # pass release_version
          build_args: release_version=${{ env.RELEASE_VERSION }}
          # tag the image with latest git tag
          tag_with_ref: true
          # add labels based on the build - see https://github.com/opencontainers/image-spec/blob/master/annotations.md
          add_git_labels: true
          # push only if this is master
          push: ${{ startsWith(github.ref, 'refs/heads/master') }}

      # Send webhook to Wire using Slack Bot
      - name: Webhook to Wire
        uses: 8398a7/action-slack@v2
        with:
          status: ${{ job.status }}
          author_name: Ganymede CI pipeline
        env:
          SLACK_WEBHOOK_URL: ${{ secrets.WEBHOOK_CI }}
        # Send message only if previous step failed
        if: failure()
