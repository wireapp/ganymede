name: CI

on:
  push:
    branches-ignore:
      - master
      - staging

  pull_request:

jobs:
  check:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2

        # use latest tag as release version in the docker container
      - name: Set Release Version
        run: echo "RELEASE_VERSION=${GITHUB_SHA}" >> $GITHUB_ENV

      - name: Setup JDK
        uses: actions/setup-java@v1
        with:
          java-version: 11.0.8

      - name: Execute test with gradle
        run: ./gradlew test

      # Builds application and creates final archive
      - name: Create on-prem tar gz
        env:
          # as this is not going to be published, fake certificate string is used
          CERTIFICATE: bm8tY2VydAo=
          VERSION: ${{ env.RELEASE_VERSION }}
        run: |
          (cd deployment && ./package.sh -v "$VERSION" -c "$CERTIFICATE")

      # Send webhook to Wire using Slack Bot
      - name: Webhook to Wire
        uses: 8398a7/action-slack@v2
        with:
          status: ${{ job.status }}
          author_name: Ganymede CI pipeline
        env:
          SLACK_WEBHOOK_URL: ${{ secrets.WEBHOOK_CI }}
        # Send message only if previous step failed
        if: failure()

  docker-build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2

      - name: Build docker image
        uses: docker/build-push-action@v1
        with:
          # build generic image
          repository: wire/ci-test-image
          # do not push image
          push: false

      # Send webhook to Wire using Slack Bot
      - name: Webhook to Wire
        uses: 8398a7/action-slack@v2
        with:
          status: ${{ job.status }}
          author_name: Docker CI pipeline
        env:
          SLACK_WEBHOOK_URL: ${{ secrets.WEBHOOK_CI }}
        # Send message only if previous step failed
        if: failure()
